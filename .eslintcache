[{"C:\\Users\\Benjamin Wu\\Desktop\\Projects\\good-eats\\src\\index.js":"1","C:\\Users\\Benjamin Wu\\Desktop\\Projects\\good-eats\\src\\App.js":"2","C:\\Users\\Benjamin Wu\\Desktop\\Projects\\good-eats\\src\\reportWebVitals.js":"3","C:\\Users\\Benjamin Wu\\Desktop\\Projects\\good-eats\\src\\components\\map.js":"4","C:\\Users\\Benjamin Wu\\Desktop\\Projects\\good-eats\\src\\components\\marker.js":"5","C:\\Users\\Benjamin Wu\\Desktop\\Projects\\good-eats\\src\\components\\infoWindow.js":"6","C:\\Users\\Benjamin Wu\\Desktop\\Projects\\good-eats\\src\\components\\markerWindow.js":"7","C:\\Users\\Benjamin Wu\\Desktop\\Projects\\good-eats\\src\\components\\searchBox.js":"8","C:\\Users\\Benjamin Wu\\Desktop\\Projects\\good-eats\\src\\components\\placeSearch.js":"9","C:\\Users\\Benjamin Wu\\Desktop\\Projects\\good-eats\\src\\components\\css\\mapStyle.js":"10","C:\\Users\\Benjamin Wu\\Desktop\\Projects\\good-eats\\src\\components\\newMarker.js":"11"},{"size":482,"mtime":1612566492294,"results":"12","hashOfConfig":"13"},{"size":462,"mtime":1612913056529,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"13"},{"size":7937,"mtime":1613694164819,"results":"16","hashOfConfig":"13"},{"size":605,"mtime":1613693954601,"results":"17","hashOfConfig":"13"},{"size":842,"mtime":1613693954598,"results":"18","hashOfConfig":"13"},{"size":2620,"mtime":1613693954602,"results":"19","hashOfConfig":"13"},{"size":951,"mtime":1613693954608,"results":"20","hashOfConfig":"13"},{"size":2782,"mtime":1613693954607,"results":"21","hashOfConfig":"13"},{"size":1528,"mtime":1613686306777,"results":"22","hashOfConfig":"13"},{"size":1056,"mtime":1613693954606,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1jyf3bn",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"C:\\Users\\Benjamin Wu\\Desktop\\Projects\\good-eats\\src\\index.js",[],["49","50"],"C:\\Users\\Benjamin Wu\\Desktop\\Projects\\good-eats\\src\\App.js",[],"C:\\Users\\Benjamin Wu\\Desktop\\Projects\\good-eats\\src\\reportWebVitals.js",[],["51","52"],"C:\\Users\\Benjamin Wu\\Desktop\\Projects\\good-eats\\src\\components\\map.js",[],"C:\\Users\\Benjamin Wu\\Desktop\\Projects\\good-eats\\src\\components\\marker.js",[],"C:\\Users\\Benjamin Wu\\Desktop\\Projects\\good-eats\\src\\components\\infoWindow.js",[],"C:\\Users\\Benjamin Wu\\Desktop\\Projects\\good-eats\\src\\components\\markerWindow.js",[],"C:\\Users\\Benjamin Wu\\Desktop\\Projects\\good-eats\\src\\components\\searchBox.js",[],"C:\\Users\\Benjamin Wu\\Desktop\\Projects\\good-eats\\src\\components\\placeSearch.js",["53"],"import {Component} from 'react';\r\nimport PlacesAutocomplete, {geocodeByAddress, geocodeByPlaceId, getLatLng} from 'react-places-autocomplete';\r\n\r\nimport \"./css/placeSearch.css\";\r\n\r\nclass PlaceSearch extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {address: ''};\r\n    }\r\n   \r\n    handleChange = address => {\r\n      this.setState({ address });\r\n    };\r\n   \r\n    handleSelect = address => {\r\n      var marker = this.props.newMarker;\r\n      marker.name = address.split(',')[0];\r\n      this.props.showLocation(marker);\r\n      geocodeByAddress(address)\r\n      .then((results) => {\r\n        return getLatLng(results[0]);\r\n      })\r\n      .then((latLng) => {\r\n        console.log('Success', latLng);\r\n\r\n        var marker = this.props.newMarker;\r\n        marker.lat = latLng.lat;\r\n        marker.lng = latLng.lng;\r\n        this.props.showLocation(marker);\r\n      })\r\n      .catch(error => console.error('Error', error));\r\n\r\n      this.setState({address: ''});\r\n    };\r\n   \r\n    render() {\r\n      var searchBoxPlaceholder = 'Find A Place ...';\r\n      if(this.props.addMarkerMode){\r\n        searchBoxPlaceholder = 'Add A Place ...';\r\n      }\r\n      return (\r\n        <PlacesAutocomplete\r\n          value={this.state.address}\r\n          onChange={this.handleChange}\r\n          onSelect={this.handleSelect}\r\n        >\r\n          {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\r\n            <div>\r\n              <input\r\n                {...getInputProps({\r\n                  placeholder: searchBoxPlaceholder,\r\n                  className: 'location-search-input PlaceInputStyle',\r\n                })}\r\n              />\r\n\r\n              <div className=\"autocomplete-dropdown-container\">\r\n                {loading && <div>Loading...</div>}\r\n                {suggestions.map(suggestion => {\r\n                  const className = suggestion.active\r\n                    ? 'suggestion-item--active'\r\n                    : 'suggestion-item';\r\n                  // inline style for demonstration purpose\r\n                  const style = suggestion.active\r\n                    ? { backgroundColor: '#3bf2f5', cursor: 'pointer' }\r\n                    : { backgroundColor: '#ffffff', cursor: 'pointer' };\r\n                  return (\r\n                    <div\r\n                      {...getSuggestionItemProps(suggestion, {\r\n                        className,\r\n                        style,\r\n                      })}\r\n                    >\r\n                      <span>{suggestion.description}</span>\r\n                      <hr/>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </PlacesAutocomplete>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default PlaceSearch;","C:\\Users\\Benjamin Wu\\Desktop\\Projects\\good-eats\\src\\components\\css\\mapStyle.js",[],"C:\\Users\\Benjamin Wu\\Desktop\\Projects\\good-eats\\src\\components\\newMarker.js",[],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"54","replacedBy":"58"},{"ruleId":"56","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":2,"column":47,"nodeType":"62","messageId":"63","endLine":2,"endColumn":63},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],["64"],["65"],"no-unused-vars","'geocodeByPlaceId' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]